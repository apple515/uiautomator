package com.uidevicetest;

import java.rmi.server.UID;

import org.junit.jupiter.params.shadow.com.univocity.parsers.tsv.TsvFormat;

import com.android.uiautomator.core.UiDevice;
import com.android.uiautomator.core.UiObject;
import com.android.uiautomator.core.UiObjectNotFoundException;
import com.android.uiautomator.core.UiSelector;
import com.android.uiautomator.testrunner.UiAutomatorTestCase;

import android.graphics.Rect;
import android.view.KeyEvent;

public class Teuidevice extends UiAutomatorTestCase {
	public void testDevice() {
//		UiDevice.getInstance().pressHome();
//		getUiDevice().pressHome();//这种方法在后续的使用过程中可能会出现空指针
		Demo2 d2=new Demo2();
		d2.press();
	}
	
	public static void main(String args) {
		String jarName, testClass, testName, androidId;
		jarName="Teuidevice";
		testClass="com.uidevicetest.Teuidevice";
		testName="testdevice";
		androidId="1";
		new UiAutomatorHelper(jarName, testClass, testName, androidId);
		
	}
	public void testPress() {
//		UiDevice.getInstance().pressMenu();//getinstanc是获取instance实例
		UiDevice.getInstance().pressKeyCode(KeyEvent.KEYCODE_A);//输入小写字母a
		
		UiDevice.getInstance().pressKeyCode(KeyEvent.KEYCODE_A,1);//输入大写字母a
	}
	
	public void testClick() throws UiObjectNotFoundException {
		UiDevice.getInstance().click(399, 355);
		int h=UiDevice.getInstance().getDisplayHeight();
		int w=UiDevice.getInstance().getDisplayWidth();
		UiDevice.getInstance().click(w/2, h/2);
		//矩形区域的对象,获取一个对象的区域
		UiObject clock=new UiObject(new UiSelector().resourceId(""));
		Rect r=clock.getBounds();
		int x0=r.left;
		int y0=r.top;
		int x1=r.right;
		int y1=r.bottom;
		
		int centerx=r.centerX();
		int centery=r.centerY();//获取中点
		
		System.out.println("["+x0+","+y0+"]");
		System.out.println("["+x1+","+y1+"]");
	}

}
